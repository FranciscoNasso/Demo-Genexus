openapi: 3.0.0
info:
  title: "Mi Primera Demo"
  version: "20241028222007"
servers:
  - url: https://trialapps3.genexus.com/Id1f440dfd7b0e07ec29ced7e96ba355e3/rest
paths:
  /General/Cliente/{CustomerID}:
    get:
      tags:
        - General.Cliente
      operationId: "GetGeneral.Cliente"
      summary: "Find an existing Cliente"
      parameters:
        - name: "CustomerID"
          in: "path"
          description: "Customer ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
    post:
      tags:
        - General.Cliente
      operationId: "InsertGeneral.Cliente"
      summary: "Add a new Cliente"
      parameters:
        - name: "CustomerID"
          in: "path"
          description: "Customer ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        description: "Cliente properties"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Cliente"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
    put:
      tags:
        - General.Cliente
      operationId: "UpdateGeneral.Cliente"
      summary: "Update an existing Cliente"
      parameters:
        - name: "CustomerID"
          in: "path"
          description: "Customer ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        description: "Cliente properties"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Cliente"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        409:
          description: "General.Cliente was changed"
    delete:
      tags:
        - General.Cliente
      operationId: "DeleteGeneral.Cliente"
      summary: "Delete an existing Cliente"
      parameters:
        - name: "CustomerID"
          in: "path"
          description: "Customer ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        204:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Cliente"
  /General/Transaction1/{InvoiceID}:
    get:
      tags:
        - General.Transaction1
      operationId: "GetGeneral.Transaction1"
      summary: "Find an existing Transaction1"
      parameters:
        - name: "InvoiceID"
          in: "path"
          description: "Invoice ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
    post:
      tags:
        - General.Transaction1
      operationId: "InsertGeneral.Transaction1"
      summary: "Add a new Transaction1"
      parameters:
        - name: "InvoiceID"
          in: "path"
          description: "Invoice ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        description: "Transaction1 properties"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Transaction1"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        201:
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
    put:
      tags:
        - General.Transaction1
      operationId: "UpdateGeneral.Transaction1"
      summary: "Update an existing Transaction1"
      parameters:
        - name: "InvoiceID"
          in: "path"
          description: "Invoice ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        description: "Transaction1 properties"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Transaction1"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        409:
          description: "General.Transaction1 was changed"
    delete:
      tags:
        - General.Transaction1
      operationId: "DeleteGeneral.Transaction1"
      summary: "Delete an existing Transaction1"
      parameters:
        - name: "InvoiceID"
          in: "path"
          description: "Invoice ID"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
        404:
          description: "Data with the specified key could not be found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        400:
          description: "Bad request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        500:
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GxJsonError"
        204:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Transaction1"
  /General/Services/DirectionsServiceRequest:
    post:
      tags:
        - General.Services
      operationId: "General.Services.DirectionsServiceRequest"
      summary: "Directions Service Request"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Services.DirectionsServiceRequestInput"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Services.DirectionsServiceRequestOutput"
        404:
          description: "Not found"
  /General/Services/GxAfterEventReplicator:
    post:
      tags:
        - General.Services
      operationId: "General.Services.GxAfterEventReplicator"
      summary: "Gx After Event Replicator"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Services.GxAfterEventReplicatorInput"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "Not found"
  /General/Services/GxBeforeEventReplicator:
    post:
      tags:
        - General.Services
      operationId: "General.Services.GxBeforeEventReplicator"
      summary: "Gx Before Event Replicator"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Services.GxBeforeEventReplicatorInput"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Services.GxBeforeEventReplicatorOutput"
        404:
          description: "Not found"
  /General/Services/GxOnPendingEventFailed:
    post:
      tags:
        - General.Services
      operationId: "General.Services.GxOnPendingEventFailed"
      summary: "Gx On Pending Event Failed"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Services.GxOnPendingEventFailedInput"
      responses:
        200:
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/General.Services.GxOnPendingEventFailedOutput"
        404:
          description: "Not found"
  /General/Services/NotificationsRegistrationHandler:
    post:
      tags:
        - General.Services
      operationId: "General.Services.NotificationsRegistrationHandler"
      summary: "Notifications Registration Handler"
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/General.Services.NotificationsRegistrationHandlerInput"
      responses:
        200:
          description: "Successful operation"
        404:
          description: "Not found"
components:
  schemas:
    General.Cliente:
      properties:
        CustomerID:
          description: "Customer ID"
          type: "integer"
          format: "int32"
        CustomerName:
          description: "Customer Name"
          type: "string"
        CustomerAddress:
          description: "Customer Address"
          type: "string"
        CustomerEmail:
          description: "Customer Email"
          type: "string"
        gx_md5_hash:
          description: "gx_md5_hash is an identifier for a specific version of a resource, it is used for optimistic concurrency check. It is required for update and delete operations and  ignored on insert."
          type: "string"
      required:
        - gx_md5_hash
    General.Transaction1:
      properties:
        InvoiceID:
          description: "Invoice ID"
          type: "integer"
          format: "int32"
        InvoiceDate:
          description: "Invoice Date"
          type: "string"
          format: "date"
        CustomerID:
          description: "Customer ID"
          type: "integer"
          format: "int32"
        CustomerName:
          description: "Customer Name"
          type: "string"
        InvoiceSubtotal:
          description: "Invoice Subtotal"
          type: "number"
          format: "double"
        InvoiceTax:
          description: "Invoice Tax"
          type: "number"
          format: "double"
        InvoiceTotal:
          description: "Invoice Total"
          type: "number"
          format: "double"
        gx_md5_hash:
          description: "gx_md5_hash is an identifier for a specific version of a resource, it is used for optimistic concurrency check. It is required for update and delete operations and  ignored on insert."
          type: "string"
        Product:
          type: array
          items:
            $ref: "#/components/schemas/General.Transaction1.Product"
      required:
        - gx_md5_hash
    General.Transaction1.Product:
      properties:
        ProductID:
          description: "Product ID"
          type: "integer"
          format: "int32"
        ProductName:
          description: "Product Name"
          type: "string"
        ProductPrice:
          description: "Product Price"
          type: "number"
          format: "double"
        InvoiceProductQuantity:
          description: "Invoice Product Quantity"
          type: "integer"
          format: "int32"
        InvoiceProductTotal:
          description: "Invoice Product Total"
          type: "number"
          format: "double"
      x-gx-level: "Transaction1"
    General.Services.DirectionsServiceRequestOutput:
      properties:
        Routes:
          description: "Route"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.Common.Route"
        errorMessages:
          description: "Messages"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.Common.Messages_Message"
    General.Services.GxBeforeEventReplicatorOutput:
      properties:
        GxPendingEvents:
          description: "Synchronization Event List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventList_SynchronizationEventListItem"
        EventResults:
          description: "Synchronization Event Result List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventResultList_SynchronizationEventResultListItem"
    General.Services.GxOnPendingEventFailedOutput:
      properties:
        Continue:
          type: "boolean"
    General.Services.DirectionsServiceRequestInput:  
      properties:
        DirectionsServiceProvider:
          type: "string"
        DirectionsRequestParameters:
          description: "Directions Request Parameters"
          $ref: "#/components/schemas/GeneXus.Common.DirectionsRequestParameters"
    General.Services.GxAfterEventReplicatorInput:  
      properties:
        EventResults:
          description: "Synchronization Event Result List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventResultList_SynchronizationEventResultListItem"
        GxSynchroInfo:
          description: "Synchronization Info"
          $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationInfo"
    General.Services.GxBeforeEventReplicatorInput:  
      properties:
        GxPendingEvents:
          description: "Synchronization Event List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventList_SynchronizationEventListItem"
        GxSyncroInfo:
          description: "Synchronization Info"
          $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationInfo"
        EventResults:
          description: "Synchronization Event Result List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventResultList_SynchronizationEventResultListItem"
    General.Services.GxOnPendingEventFailedInput:  
      properties:
        PendingEvent:
          description: "Synchronization Event List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventList_SynchronizationEventListItem"
        BCName:
          type: "string"
        BCJson:
          type: "string"
        EventResult:
          description: "Synchronization Event Result List"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventResultList_SynchronizationEventResultListItem"
        GxSyncroInfo:
          description: "Synchronization Info"
          $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationInfo"
    General.Services.NotificationsRegistrationHandlerInput:  
      properties:
        DeviceType:
          type: "integer"
          format: "int32"
        DeviceId:
          type: "string"
        DeviceToken:
          type: "string"
        DeviceName:
          type: "string"
    GeneXus.Common.DirectionsRequestParameters:
      properties:
        sourceLocation:
          description: "Source Location"
          type: "string"
        destinationLocation:
          description: "Destination Location"
          type: "string"
        waypoints:
          description: "Intermediate waypoints"
          type: array
          items:
            type: "string"
        optimizeWaypoints:
          description: "optimize Waypoints"
          type: "boolean"
        transportType:
          description: "transport Type"
          type: "string"
        requestAlternateRoutes:
          description: "request Alternate Routes"
          type: "boolean"
        additionalParameters:
          description: "Configuration Property"
          type: array
          items:
            $ref: "#/components/schemas/GeneXus.Common.Notifications.ConfigurationProperty"
    GeneXus.Common.Messages_Message:
      properties:
        Id:
          description: "Id"
          type: "string"
        Type:
          description: "Type"
          type: "integer"
          format: "int32"
        Description:
          description: "Description"
          type: "string"
    GeneXus.Common.Notifications.ConfigurationProperty:
      properties:
        PropertyName:
          description: "Property Name"
          type: "string"
        PropertyValue:
          description: "Property Value"
          type: "string"
    GeneXus.Common.Route:
      properties:
        name:
          description: "The expected travel time in seconds"
          type: "string"
        advisoryNotices:
          description: "A collection of advisory notice strings for the route"
          type: array
          items:
            type: "string"
        distance:
          description: "The route distance in meters"
          type: "number"
          format: "double"
        expectedTravelTime:
          description: "The expected travel time in seconds"
          type: "number"
          format: "double"
        transportType:
          description: "The overall route transport type"
          type: "string"
        geoline:
          description: "The route geometry"
          type: "string"
    GeneXus.SD.Synchronization.SynchronizationEventList_SynchronizationEventListItem:
      properties:
        EventId:
          description: "Pending Event Id"
          type: "string"
          format: "uuid"
        EventTimestamp:
          description: "Pending Event Timestamp"
          type: "string"
          format: "date-time"
        EventBC:
          description: "Pending Event BC"
          type: "string"
        EventAction:
          description: "Pending Event Action"
          type: "integer"
          format: "int32"
        EventData:
          description: "Pending Event Data"
          type: "string"
        EventStatus:
          description: "Pending Event Status"
          type: "integer"
          format: "int32"
        EventErrors:
          description: "Pending Event Extras"
          type: "string"
    GeneXus.SD.Synchronization.SynchronizationEventResultList_SynchronizationEventResultListItem:
      properties:
        EventId:
          description: "Pending Event Id"
          type: "string"
          format: "uuid"
        EventTimestamp:
          description: "Pending Event Timestamp"
          type: "string"
          format: "date-time"
        EventStatus:
          description: "Pending Event Status"
          type: "integer"
          format: "int32"
        EventErrors:
          description: "Pending Event Errors"
          type: "string"
        Mappings:
          type: array
          items:
            description: MappingsItem
            $ref: "#/components/schemas/GeneXus.SD.Synchronization.SynchronizationEventResultList.Mappings_MappingsItem"
    GeneXus.SD.Synchronization.SynchronizationEventResultList.Mappings_MappingsItem:
      properties:
        Table:
          description: "Table"
          type: "string"
        Updates:
          description: "Updates"
          type: "string"
        Conditions:
          description: "Conditions"
          type: "string"
      x-gx-level: "SynchronizationEventResultList"
    GeneXus.SD.Synchronization.SynchronizationInfo:
      properties:
        GxAppVersion:
          description: "Application Version"
          type: "string"
        Synchronizer:
          description: "Synchronizer"
          type: "string"
    GxJsonError:
      properties:
        error:
          $ref: "#/components/schemas/GxJsonError.error"
    GxJsonError.error:
      properties:
        code:
          type: "string"
        message:
          type: "string"
      x-gx-level: "GxJsonError"
